// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/gorm"
)

const TableNameRepo = "repos"

// Repo mapped from table <repos>
type Repo struct {
	ID                   string         `gorm:"column:id;primaryKey;default:uuid_generate_v4()" json:"id"`
	CreatedAt            time.Time      `gorm:"column:created_at" json:"created_at"`
	UpdatedAt            time.Time      `gorm:"column:updated_at" json:"updated_at"`
	DeletedAt            gorm.DeletedAt `gorm:"column:deleted_at" json:"deleted_at"`
	Name                 string         `gorm:"column:name" json:"name"`
	OrganisationID       string         `gorm:"column:organisation_id" json:"organisation_id"`
	DiggerConfig         string         `gorm:"column:digger_config" json:"digger_config"`
	RepoFullName         string         `gorm:"column:repo_full_name" json:"repo_full_name"`
	RepoOrganisation     string         `gorm:"column:repo_organisation" json:"repo_organisation"`
	RepoName             string         `gorm:"column:repo_name" json:"repo_name"`
	RepoURL              string         `gorm:"column:repo_url" json:"repo_url"`
	GithubInstallationID string         `gorm:"column:github_installation_id" json:"github_installation_id"`
	GithubAppID          int64          `gorm:"column:github_app_id" json:"github_app_id"`
	AccountID            int64          `gorm:"column:account_id" json:"account_id"`
	Login                string         `gorm:"column:login" json:"login"`
	CloneURL             string         `gorm:"column:clone_url" json:"clone_url"`
	DefaultBranch        string         `gorm:"column:default_branch" json:"default_branch"`
}

// TableName Repo's table name
func (*Repo) TableName() string {
	return TableNameRepo
}
